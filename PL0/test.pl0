begin
	for,to,downto,+=,-=,++,--,return
end.
//将需要运算的代码复制到文件首部即可编译成功。

//实验内容测试：for,to,downto,+=,-=,++,--,return
begin
	for,to,downto,+=,-=,++,--,return
end.
//实验内容测试：<>符号，else语句。
const d=6;
begin
	if d <> d then write(0)
	else 
		begin
			if 1 = d then write(1)
			else if 2 = d then write(2)
			else if 3 = d then write(3)
			else if 4 = d then write(4)
			else write(5);	
		end
end.
//课设内容测试1： +=，-=运算。
var d;
begin
	d:=5;

	d+=1;
	write(d);
	
	d-=1;
	write(d);
end.
//课设内容测试1： for语句。
var d, i, j;
begin
	i:=1;
	j:=5;

	for d:= i to j do
		write(d);
	write(d);
	for d:= j downto i do
	begin
		write(d);
	end;	
	write(d);
end.

//课设内容测试2：++,--运算。
var d;
begin
	d:=5;

	write(d);	
	write(d++);	
	write(d);	
	write(++d);	
	write(d);	
	write(d--);	
	write(d);	
	write(--d);	
	write(d);	
	write(++d++);	
	write(d);	
	write(--d--);	
	write(d);	
	write(++d--);	
	write(--d++);	
	write(d);	
	
	d++;
	write(d);
	++d;
	write(d);
	d--;
	write(d);
	--d;
	write(d);
			
end.
//测试字符类型与实数类型的词法分析、运算、输入、输出。
const  i = 666, c = '\\', r = 2.314;
var v1, int v2, char v3, real v4;
begin
	write(i);
	v3:=c;
	write(v3);
	write(r);
	
	v4 := +.3 + 3 + .6 ;
	write(v4);

	v4 := -.3 - 3 - .6;
	write(v4);

	v4 := .3 * 3 * .6 ;
	write(v4);

	v4 := .3 / 3 / .6 ;
	write(v4);

	write(++v4++);
	write(++v4--);
	write(--v4++);
	write(--v4--);

	++v4++;
	write(v4);
	--v4--;
	write(v4);
	++v4--;
	write(v4);
	--v4++;
	write(v4);

	for v4 := 10.3 to 15.4 do
		write(v4);
	write(v4);

	v2 := 0.3;
	while v2 < 5.3 do
		begin
			write(v2);
			v2++;
		end;
end.
//测试过程参数，过程返回，返回值赋值。
var int i, real r;
procedure writes(int a, real b);
		begin
			write(a);
			write(b);
		end;
char procedure addi(int a, int b);
	begin
		if a>b then 
			return a+b
		else 
			a := a+b;
		return a;
	end;
real procedure addr(real a, real b);
	begin
		return a+b;
	end;
begin
	i := 0;
	i := call writes(1, 1.1);
	write(i);

	r := call addi(10.3, 234.8);
	write(r);

	i := call addr(7.9, 2.2);
	write(i);

end.
//课设内容测试4： 测试表达式
var real[5] a;
begin
	a[0] := 4;
	a[1] := 3;
	a[2] := 2;
	a[3] := 1;
	a[4] := 0;

	a[0]:=4;
	write(++a[a[a[0]]]++ +1);
	write(a[0]);
	a[0]:=4;
	write(++a[a[a[0]]]-- +1);
	write(a[0]);
	a[0]:=4;
	write(--a[a[a[0]]]++ +1);
	write(a[0]);
	a[0]:=4;
	write(--a[a[a[0]]]-- +1);
	write(a[0]);

end.
6.000
6.000
6.000
4.000
4.000
4.000
4.000
2.000
//课设内容测试4： 测试赋值
var real[5] a;
real procedure addr(real a, real b);
	begin
		return a+b;
	end;
begin
	a[0] := 4;
	a[1] := 3;
	a[2] := 2;
	a[3] := 1;
	a[4] := 0;

	a[a[a[0]]] += call addr(a[a[3]], a[a[1]]);
	write(a[0]);

	a[a[a[0]-4]] -= call addr(a[a[3]], a[a[1]]);
	write(a[0]);

	a[a[a[0]]] += a[a[3]] * a[a[2]];
	write(a[0]);
	
	a[a[a[0] - 6]] -= a[a[3]] * a[a[2]];
	write(a[0]);
end.
8.000
4.000
10.000
4.000

//课设内容测试4： 测试自增自减
var real[5] a;
real procedure addr(real a, real b);
	begin
		return a+b;
	end;
begin
	a[0] := 4;
	a[1] := 3;
	a[2] := 2;
	a[3] := 1;
	a[4] := 0;

	++a[a[a[3]] + 1]++;
	write(a[4]);
	++a[a[a[3]] + 1]--;
	write(a[4]);
	--a[a[a[3]] + 1]++;
	write(a[4]);
	--a[a[a[3]] + 1]--;
	write(a[4]);
	
end.
2.000
2.000
2.000
0.000

//课设内容测试4： 测试for
var real[5] a;
begin
	a[0] := 4;
	a[1] := 3;
	a[2] := 2;
	a[3] := 1;
	a[4] := 0;

	for a[a[4]] := 0 to a[a[3]] do
		begin
			write(a[a[4]]);
		end;

	for a[a[4]] := 6 downto a[a[3]] do
		begin
			write(a[a[4]]);
		end;
end.
0.000
1.000
2.000
3.000
6.000
5.000
4.000
3.000

//课设内容测试4： 测试read
var real[5] a;
begin
	a[0] := 4;
	a[1] := 3;
	a[2] := 2;
	a[3] := 1;
	a[4] := 0;

	read(a[0]);
	write(a[0]);

	read(a[a[4]]);
	write(a[0]);

	read(a[a[a[a[a[a[a[a[3]]]]]]]]);
	write(a[1]);
end.
D:\work\learn-compile\PL0\test.pl0